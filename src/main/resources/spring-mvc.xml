<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-4.3.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd"> 

                         
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->  
    <context:component-scan base-package="com.all_union.es.esalarm.controller" />  	

	<!-- 注解支持    spring4新特性：在使用 mvc:annotation-driven 会 需要注册一个validator  
	参考 http://jinnianshilongnian.iteye.com/blog/1990081 -->  
    <mvc:annotation-driven/>
	
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->  
    <bean id="mappingJacksonHttpMessageConverter"  
        class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/html;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean>  
    <!-- add by kwm on 2017.03.16 begin -->
    <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter4">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value> 
            </list>
        </property>
        <property name="fastJsonConfig">
        	<bean class="com.alibaba.fastjson.support.config.FastJsonConfig">
        		<property name="features">
	        		<list>
		                <value>AllowArbitraryCommas</value>
		                <value>AllowUnQuotedFieldNames</value>
		                <value>DisableCircularReferenceDetect</value>
		            </list>
        		</property>
        		<property name="dateFormat" value="yyyy-MM-dd HH:mm:ss"></property>
        	</bean>
        </property>
    </bean>    
    <!-- add by kwm on 2017.03.16 end -->
    
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->  
    <bean  
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
            	<ref bean="fastJsonHttpMessageConverter" />
            	<!-- JSON转换器 
                <ref bean="mappingJacksonHttpMessageConverter" />   
                -->
            </list>  
        </property>  
    </bean> 
     
    <!-- 配置tiles模板 -->
    <bean id="tilesConfigurer"
        class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <!-- <value>/WEB-INF/tiles/tiles.xml</value> -->
                <value>classpath:tiles.xml</value>
            </list>
        </property>
    </bean>   
	<!-- 配置tiles视图解析器 -->
    <bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass">
            <value>org.springframework.web.servlet.view.tiles3.TilesView</value>
        </property>
        <property name="order" value="0"/>
    </bean>       
    
    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->  
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->  
        <property name="prefix" value="/WEB-INF/jsp/" />  
        <property name="suffix" value=".jsp" />  
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="order" value="2"/>
    </bean>  
    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->  
    <bean id="multipartResolver"    
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
        <!-- 默认编码 -->  
        <property name="defaultEncoding" value="utf-8" />    
        <!-- 文件大小最大值 -->  
        <property name="maxUploadSize" value="10485760000" />    
        <!-- 内存中的最大值 -->  
        <property name="maxInMemorySize" value="40960" />    
    </bean>   
  
  	<!-- 拦截器配置 -->
  	<!--  
  	页面代码中加入：
  	<input type="hidden" name="token" value="${token}" />
  	
  	-->
    <mvc:interceptors>
        <!-- 配置Token拦截器，防止用户重复提交数据 -->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.all_union.es.esalarm.Interceptor.TokenInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
  	 
	
    <!-- 
	1.指定静态资源,不会被(视图解析器拦截)(如果一定要放在web-inf下)。
	2.开启这个配置，必须配置   <mvc:annotation-driven/> 
 	
 	3.web.xml中<servlet-mapping>配置与此处配置会冲突
 	(不要对 SimpleUrlHandlerMapping 设置 defaultHandler. 因为对 static uri 的 defaultHandler 
 	就是ResourceHttpRequestHandler,否则无法处理static resources request.)
 	
 	结论：静态资源，可以在这里配置，也可以在web.xml中配置，都可以生效。
 	但是如果一定要把静态资源放在web-inf目录下，则只能配置成下面这样。
 	另外，web.xml中和此处不能重复配置
    -->  
	<mvc:resources mapping="/html/**" location="/WEB-INF/html/" />   	 	
  
</beans>  