<?xml version="1.0" encoding="UTF-8"?>
<!-- Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出。 -->
<!-- ${sys:catalina.base} \ ${catalina.base} \ monitorInterval：Log4j能够自动检测修改配置 
	文件和重新配置本身，设置间隔秒数。 -->
<configuration status="warn" monitorInterval="30">

	<properties>
		<!-- ide所在的根目录 -->
		<property name="filepath">/logs/</property>
		<!-- 部署目录，与WEB-INF目录同级 <property name="filepath">${web:rootDir}/logs/</property> -->
		<!-- 这个地址默认生成到d:\项目名\ <property name="filepath">${web:contextPath}/logs/</property> -->
	</properties>
	<!--先定义所有的appender -->
	<appenders>
		<!--这个输出控制台的配置 -->
		<Console name="Console" target="SYSTEM_OUT">
			<!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
			<ThresholdFilter level="trace" onMatch="ACCEPT"
				onMismatch="DENY" />
			<!--输出日志的格式 -->
			<PatternLayout
				pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n" />
		</Console>

		<!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用 -->
		<File name="FileLog" fileName="${filepath}/temp.log" append="false">
			<PatternLayout
				pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n" />
		</File>

		<!-- 这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
		<RollingFile  name="RollingFile" fileName="${filepath}/esalarm.log"
			filePattern="log/$${date:yyyy-MM}/app-%d{MM-dd-yyyy}-%i.log.gz">
			<PatternLayout
				pattern="%d{yyyy-MM-dd HH:mm:ss z} %-5level %class{36} %L %M - %msg%xEx%n" />
			<SizeBasedTriggeringPolicy size="50MB" />
			<!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->
			<DefaultRolloverStrategy max="20" />
		</RollingFile >
		<!-- 异步写日志 -->
        <Async name="Async">  
            <AppenderRef ref="RollingFile" /> 
            <AppenderRef ref="FileLog" /> 
        </Async>  		
	</appenders>
	<!--然后定义logger，只有定义了logger并引入的appender，appender才会生效 -->
	<loggers>

		<!--建立一个默认的root的logger trace -->
		<root level="debug">
			<appender-ref ref="RollingFile" />
			<appender-ref ref="Console" />
			<appender-ref ref="FileLog" />
		</root>
		<!-- 
			如果下面注释掉，将按照上面定义的root的level输出log，如果不注释，将使用各自配置的level,
			但是不会高于root level -->
		
        <logger name="org.springframework.core" level="error" />
        <logger name="org.springframework.beans" level="error" />
        <logger name="org.springframework.context" level="error" />
        <logger name="org.springframework.web" level="error" />
        <logger name="java.sql.Connection" level="info" />
        <logger name="java.sql.Statement" level="info" />
        <logger name="java.sql.PreparedStatement" level="info" />
        <logger name="java.sql.ResultSet" level="info" />
        <logger name="java.sql.PreparedStatement" level="info" />
        <logger name="com.ibatis.common.jdbc.SimpleDataSource" level="info" />
        <logger name="com.ibatis.common.jdbc.ScriptRunner" level="info" />
        <logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="info" />
        <logger name="com.ibatis" level="info" />
        <logger name="org.apache.http" level="info" />  
        <logger name="org.quartz" level="info" /> 
               		
	</loggers>
</configuration>