<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd  
    http://www.springframework.org/schema/security 
    http://www.springframework.org/schema/security/spring-security-4.2.xsd">



	<!-- 从数据库中获取用户权限 -->
	<!-- 静态资源 与web.xml配置对应：
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>/js/*</url-pattern>
	</servlet-mapping>
	-->
	<http pattern="/css/**" security="none" />
	<http pattern="/images/**" security="none" />
	<http pattern="/js/**" security="none" />
	<!-- 放开前端页面 -->
	<http pattern="/html/**" security="none" />
	
	<!-- Stateless RESTful service using Basic authentication 
		rest api的认证暂时先不配置，要看实际需要basic auth还是oAUTH2
	-->
	<!--  
	<http pattern="/rest/**" create-session="stateless">
		<intercept-url pattern='/**' access="hasRole('REMOTE')" />
		<http-basic />
	</http>
	-->
	
	<!-- 放开rest api -->
	<http pattern="/rest/**" security="none" />
	
	<!-- 开启默认的拦截器 -->
	<http use-expressions="true" auto-config="true">
		<!-- <headers/> -->

		<!-- 静态资源 这么除了/login好用，其他页面获取不到资源 <intercept-url pattern="/css/**" access="anonymous"/> 
			<intercept-url pattern="/images/**" access="anonymous"/> <intercept-url pattern="/js/**" 
			access="anonymous"/> -->

		<!-- 允许访问的 uri -->
		<intercept-url pattern="/login" access="permitAll" />
		<intercept-url pattern="/logout" access="permitAll" />
		<intercept-url pattern="/home" access="hasRole('USER')" />
		<intercept-url pattern="/admin" access="hasRole('ADMIN') and hasRole('DBA')" />
		<intercept-url pattern="/dba" access="hasRole('DBA')" />

		<!-- user -->
		<intercept-url pattern="/background/user/**" access="hasRole('USER') or hasRole('ADMIN')" />
		<!-- schedule -->
		<intercept-url pattern="/background/schedule/**" access="hasRole('ADMIN')" />
		<!-- flow -->
		<intercept-url pattern="/background/flow/**" access="hasRole('ADMIN')" />
		
		<intercept-url pattern="/**" access="authenticated" />

		<!-- 自定义登录页面  -->
		<!-- 
			form-login如果不配置authentication-success-handler-ref="customSuccessHandler"，
			则默认调用SavedRequestAwareAuthenticationSuccessHandler，会自动记忆登录前请求的页面
		 -->
		<form-login login-page="/login" username-parameter="userName"
			password-parameter="password"  authentication-success-handler-ref="customSuccessHandler"
			authentication-failure-url="/login?error" />
		<csrf />
		<access-denied-handler error-page="/Access_Denied" />

	</http>

	<!-- 权限管理者 -->
	<authentication-manager>
		<authentication-provider user-service-ref="customUserDetailsService" />
	</authentication-manager>

	<!-- 处理spring security用户信息 -->
	<beans:bean id="customUserDetailsService"
		class="com.all_union.es.esalarm.service.security.impl.CustomUserDetailsService" />
		
	<!-- 身份认证成功后，处理方法 -->
	<beans:bean id="customSuccessHandler"
		class="com.all_union.es.esalarm.security.config.CustomSaveReuestAwareSuccessHandler" />
	

</beans:beans>
	
